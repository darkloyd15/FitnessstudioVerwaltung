// <auto-generated />
using System;
using Abschlussprojekt_Fitnessstudio.DbModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Abschlussprojekt_Fitnessstudio.Migrations
{
    [DbContext(typeof(Abschlussprojekt_FitnessstudioContext))]
    [Migration("20220513164402_initalMigration")]
    partial class initalMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Latin1_General_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Abschlussprojekt_Fitnessstudio.DbModels.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StreetNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Streetname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Zipcode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Abschlussprojekt_Fitnessstudio.DbModels.Customer", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Createdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Emailaddress")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("RemovedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Subscription")
                        .HasColumnType("int");

                    b.Property<int?>("TrainingPlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Subscription");

                    b.HasIndex("TrainingPlanId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Abschlussprojekt_Fitnessstudio.DbModels.CustomerAddress", b =>
                {
                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasIndex("AddressId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerAddress");
                });

            modelBuilder.Entity("Abschlussprojekt_Fitnessstudio.DbModels.Employee", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("ID");

                    b.Property<int?>("Address")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Createdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Emailaddress")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasComment("");

                    b.Property<DateTime?>("RemovedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Address");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Abschlussprojekt_Fitnessstudio.DbModels.Schedule", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("EmployeeId")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("Abschlussprojekt_Fitnessstudio.DbModels.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("PricePerMonth")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Subscription");
                });

            modelBuilder.Entity("Abschlussprojekt_Fitnessstudio.DbModels.TrainingMachine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("TrainingMachine");
                });

            modelBuilder.Entity("Abschlussprojekt_Fitnessstudio.DbModels.TrainingMachinePlan", b =>
                {
                    b.Property<int?>("Iteration")
                        .HasColumnType("int");

                    b.Property<int?>("TrainingMachineId")
                        .HasColumnType("int");

                    b.Property<int?>("TrainingPlanId")
                        .HasColumnType("int");

                    b.HasIndex("TrainingMachineId");

                    b.HasIndex("TrainingPlanId");

                    b.ToTable("TrainingMachinePlan");
                });

            modelBuilder.Entity("Abschlussprojekt_Fitnessstudio.DbModels.TrainingPlan", b =>
                {
                    b.Property<int>("TrainingPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Anmerkung")
                        .HasMaxLength(200)
                        .HasColumnType("nchar(200)")
                        .IsFixedLength(true)
                        .HasComment("");

                    b.HasKey("TrainingPlanId");

                    b.ToTable("TrainingPlan");
                });

            modelBuilder.Entity("Abschlussprojekt_Fitnessstudio.DbModels.Customer", b =>
                {
                    b.HasOne("Abschlussprojekt_Fitnessstudio.DbModels.Subscription", "SubscriptionNavigation")
                        .WithMany("Customers")
                        .HasForeignKey("Subscription")
                        .HasConstraintName("fk_CustomerSubscription");

                    b.HasOne("Abschlussprojekt_Fitnessstudio.DbModels.TrainingPlan", "TrainingPlan")
                        .WithMany("Customers")
                        .HasForeignKey("TrainingPlanId")
                        .HasConstraintName("fk_CustomerTrainingPlanId");

                    b.Navigation("SubscriptionNavigation");

                    b.Navigation("TrainingPlan");
                });

            modelBuilder.Entity("Abschlussprojekt_Fitnessstudio.DbModels.CustomerAddress", b =>
                {
                    b.HasOne("Abschlussprojekt_Fitnessstudio.DbModels.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .HasConstraintName("fk_AdressId");

                    b.HasOne("Abschlussprojekt_Fitnessstudio.DbModels.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("fk_CustomerId");

                    b.Navigation("Address");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Abschlussprojekt_Fitnessstudio.DbModels.Employee", b =>
                {
                    b.HasOne("Abschlussprojekt_Fitnessstudio.DbModels.Address", "AddressNavigation")
                        .WithMany("Employees")
                        .HasForeignKey("Address")
                        .HasConstraintName("fk_EmployeeAddressId");

                    b.Navigation("AddressNavigation");
                });

            modelBuilder.Entity("Abschlussprojekt_Fitnessstudio.DbModels.Schedule", b =>
                {
                    b.HasOne("Abschlussprojekt_Fitnessstudio.DbModels.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("fk_ScheduleCustomerId");

                    b.HasOne("Abschlussprojekt_Fitnessstudio.DbModels.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("fk_ScheduleEmployeeId");

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Abschlussprojekt_Fitnessstudio.DbModels.TrainingMachinePlan", b =>
                {
                    b.HasOne("Abschlussprojekt_Fitnessstudio.DbModels.TrainingMachine", "TrainingMachine")
                        .WithMany()
                        .HasForeignKey("TrainingMachineId")
                        .HasConstraintName("fk_TrainingMachineId");

                    b.HasOne("Abschlussprojekt_Fitnessstudio.DbModels.TrainingPlan", "TrainingPlan")
                        .WithMany()
                        .HasForeignKey("TrainingPlanId")
                        .HasConstraintName("fk_TrainingPlanId");

                    b.Navigation("TrainingMachine");

                    b.Navigation("TrainingPlan");
                });

            modelBuilder.Entity("Abschlussprojekt_Fitnessstudio.DbModels.Address", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Abschlussprojekt_Fitnessstudio.DbModels.Subscription", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("Abschlussprojekt_Fitnessstudio.DbModels.TrainingPlan", b =>
                {
                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
